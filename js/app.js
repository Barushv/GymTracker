import { applyTheme, DAYS, renderCardio, renderPlan, kgRange } from './ui.js';
import { loadAll, saveState, saveOneRM, saveTheme, backup } from './storage.js';
const $=id=>document.getElementById(id);
let routines={}, defaults1RM={}, state, progress, oneRM, theme; let viewMode=(window.innerWidth<=900)?'cards':'table';
async function boot(){ [routines, defaults1RM] = await Promise.all([fetch('data/routines.json').then(r=>r.json()), fetch('data/defaults_1rm.json').then(r=>r.json())]); const loaded=loadAll({person:'fercho',day:'Lunes',week:1,notes:''}); state=loaded.state; progress=loaded.progress; oneRM=loaded.oneRM||defaults1RM; theme=loaded.theme; applyTheme(theme); $('theme').value=theme; $('person').value=state.person; $('week').value=String(state.week); $('day').innerHTML=DAYS.map(d=>`<option ${d===state.day?'selected':''} value="${d}">${d}</option>`).join(''); $('theme').onchange=e=>{ theme=e.target.value; applyTheme(theme); saveTheme(theme); }; $('person').onchange=e=>{ state.person=e.target.value; saveState(state); renderAll(); }; $('day').onchange=e=>{ state.day=e.target.value; saveState(state); renderPlan(viewMode,routines,state,oneRM,progress); }; $('week').onchange=e=>{ state.week=Number(e.target.value); saveState(state); }; $('btnExport').onclick=exportCSV; $('btnSettings').onclick=openSettings; $('btnClose').onclick=closeSettings; $('btnAdd1RM').onclick=addOneRM; $('btnReset1RM').onclick=resetOneRM; $('btnBackup').onclick=()=>backup({version:4,state,progress,oneRM,theme}); $('btnRestore').onclick=()=>$('fileRestore').click(); $('fileRestore').addEventListener('change',doRestore); $('btnView').onclick=toggleView; renderAll(); setupInstallPrompt(); if('serviceWorker' in navigator){ window.addEventListener('load',()=>navigator.serviceWorker.register('./sw.js').catch(console.error)); } }
function renderAll(){ renderPlan(viewMode,routines,state,oneRM,progress); renderCardio(); $('deficitText').textContent= state.person==='fercho' ? '−300 a −400 kcal en Mar/Jue/Sáb/Dom; mantenimiento Lun/Mié/Vie' : '−200 a −300 kcal en Mar/Jue/Sáb/Dom; mantenimiento Lun/Mié/Vie'; $('notes').value=state.notes||''; $('notes').oninput=e=>{ state.notes=e.target.value; saveState(state); }; }
function exportCSV(){ const plan=routines[state.person][state.day]; const rows=[]; rows.push(['Persona',state.person]); rows.push(['Día',state.day]); rows.push(['Semana',state.week]); rows.push([]); rows.push(['Ejercicio','Tipo','Esquema','Carga objetivo','Tempo','Descanso','RIR','S1','S2','S3','S4']); plan.forEach(([name,type,scheme,load,tempo,rest,rir])=>{ const p=(progress[state.person]?.[name])||{}; rows.push([name,type,scheme,kgRange(oneRM,state.person,load),tempo||'',rest||'',rir||'',p.S1||'',p.S2||'',p.S3||'',p.S4||'']); }); const csv=rows.map(r=>r.map(x=>`"${String(x).replaceAll('"','""')}"`).join(',')).join('\n'); const blob=new Blob([csv],{type:'text/csv;charset=utf-8;'}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download=`rutina_${state.person}_${state.day}.csv`; a.click(); URL.revokeObjectURL(url); }
function openSettings(){ renderOneRMEditor(); $('modal').classList.add('open'); } function closeSettings(){ $('modal').classList.remove('open'); }
function renderOneRMEditor(){ const root=$('oneRmEditor'); root.innerHTML=''; ['fercho','andy'].forEach(person=>{ const block=document.createElement('div'); block.innerHTML=`<h4 style="margin:8px 0">${person.toUpperCase()}</h4>`; const list=document.createElement('div'); list.className='grid2'; Object.keys(oneRM[person]).sort().forEach(k=>{ const wrap=document.createElement('div'); wrap.innerHTML=`<label>${k}</label><input type="number" step="0.5" value="${oneRM[person][k]}" data-person="${person}" data-ex="${k}">`; list.appendChild(wrap); }); block.appendChild(list); root.appendChild(block); }); root.querySelectorAll('input[type=number]').forEach(inp=>{ inp.addEventListener('change',e=>{ const p=e.target.getAttribute('data-person'); const ex=e.target.getAttribute('data-ex'); const val=parseFloat(e.target.value); if(isFinite(val)){ oneRM[p][ex]=val; saveOneRM(oneRM); renderPlan(viewMode,routines,state,oneRM,progress); } }); }); }
function addOneRM(){ const who=prompt('¿Para quién? (fercho/andy)','fercho'); if(!who||!oneRM[who]) return; const name=prompt('Nombre exacto del ejercicio (igual a la tabla):','Hip Thrust'); if(!name) return; const val=parseFloat(prompt('1RM en kg:','100')); if(!isFinite(val)) return; oneRM[who][name]=val; saveOneRM(oneRM); renderOneRMEditor(); renderPlan(viewMode,routines,state,oneRM,progress); }
function resetOneRM(){ if(confirm('¿Restablecer 1RM a valores por defecto?')){ fetch('data/defaults_1rm.json').then(r=>r.json()).then(def=>{ oneRM=def; saveOneRM(oneRM); renderOneRMEditor(); renderPlan(viewMode,routines,state,oneRM,progress); }); } }
function doRestore(evt){ const file=evt.target.files[0]; if(!file) return; const reader=new FileReader(); reader.onload=()=>{ try{ const data=JSON.parse(reader.result); state=data.state||state; progress=data.progress||progress; oneRM=data.oneRM||oneRM; theme=data.theme||theme; applyTheme(theme); saveTheme(theme); $('theme').value=theme; saveState(state); saveOneRM(oneRM); renderAll(); closeSettings(); alert('Respaldo restaurado.'); }catch{ alert('Archivo inválido.'); } }; reader.readAsText(file); }
function toggleView(){ viewMode = (viewMode==='table')?'cards':'table'; $('btnView').textContent = 'Vista: ' + (viewMode==='table'?'Tabla':'Tarjetas'); renderPlan(viewMode,routines,state,oneRM,progress); }
let deferredPrompt; function setupInstallPrompt(){ window.addEventListener('beforeinstallprompt',e=>{ e.preventDefault(); deferredPrompt=e; const btn=$('btnInstall'); btn.style.display='inline-block'; btn.addEventListener('click', async ()=>{ btn.disabled=true; if(deferredPrompt){ deferredPrompt.prompt(); await deferredPrompt.userChoice; deferredPrompt=null; } btn.disabled=false; btn.style.display='none'; }); }); }
boot();